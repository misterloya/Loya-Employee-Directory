{"version":3,"sources":["utils/API.js","components/BootstrapTable.js","components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["API","axios","get","Table","props","striped","bordered","hover","employees","map","employee","src","picture","thumbnail","alt","name","first","last","login","username","Search","className","htmlFor","onChange","handleInputChange","value","search","type","placeholder","id","App","event","target","setState","state","then","res","data","results","this","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSAGaA,EAAM,WAGf,OAAOC,IAAMC,IAAI,0C,eCJN,SAASC,EAAMC,GAC1B,OACI,8BACI,eAAC,IAAD,CAAgBC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAAtC,UACI,gCACI,+BACI,wCACA,4CACA,2CACA,+CAIR,gCACKH,EAAMI,UAAUC,KAAI,SAAAC,GAAQ,OAC7B,+BACI,6BAAI,qBAAKC,IAAKD,EAASE,QAAQC,UAAWC,IAAKJ,EAASK,KAAKC,UAC7D,6BAAKN,EAASK,KAAKC,QACnB,6BAAKN,EAASK,KAAKE,OACnB,6BAAKP,EAASQ,MAAMC,wB,MCnB7B,SAASC,EAAOhB,GAC3B,OACI,8BACI,+BACA,sBAAKiB,UAAU,aAAf,UACI,uBAAOC,QAAQ,SAAf,qBACA,uBACAC,SAAUnB,EAAMoB,kBAChBC,MAAOrB,EAAMsB,OACbX,KAAK,SACLY,KAAK,OACLN,UAAU,eACVO,YAAY,mCACZC,GAAG,kB,ICqCJC,E,kDA1Cb,WAAY1B,GAAQ,IAAD,8BACjB,cAAMA,IAgBNoB,kBAAoB,SAAAO,GAClB,IAAMhB,EAAOgB,EAAMC,OAAOjB,KACpBU,EAAQM,EAAMC,OAAOP,MAC3B,EAAKQ,SAAL,eACGlB,EAAOU,KAnBZ,EAAKS,MAAQ,CACX1B,UAAW,GACXkB,OAAQ,IAJO,E,qDAOjB,WAAoB,IAAD,OACjB1B,IACCmC,MAAK,SAAAC,GACJ,EAAKH,SAAS,CACZzB,UAAW4B,EAAIC,KAAKC,e,oBAgB9B,WAAS,IAAD,OACN,OACE,sBAAKjB,UAAU,MAAf,UAIE,cAACD,EAAD,CAAQM,OAAUa,KAAKL,MAAMR,OAAQF,kBAAmBe,KAAKf,oBAC7D,cAAC,EAAD,CAAgBhB,UAAa+B,KAAKL,MAAM1B,UAAUgC,QAAO,SAAA9B,GAAQ,OAAIA,EAASK,KAAKE,KAAKwB,cAAcC,SAAU,EAAKR,MAAMR,OAAOe,2B,GAnCtHE,IAAMC,WCGTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8fc77515.chunk.js","sourcesContent":["\nimport axios from \"axios\";\n\nexport const API = {\n  getEmployee() {\n\n    return axios.get(\"https://randomuser.me/api/?results=50\");\n    // http client, allows us to make http requests\n  }\n\n} \n\n","import {Table as BootstrapTable} from \"react-bootstrap\"\r\n\r\nexport default function Table(props) {\r\n    return (\r\n        <div>\r\n            <BootstrapTable striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Photo </th>\r\n                        <th>First Name</th>\r\n                        <th>Last Name</th>\r\n                        <th>Username</th>\r\n                    </tr>\r\n                </thead>\r\n                \r\n                <tbody>\r\n                    {props.employees.map(employee => (\r\n                    <tr>\r\n                        <td><img src={employee.picture.thumbnail} alt={employee.name.first}></img></td>\r\n                        <td>{employee.name.first}</td>\r\n                        <td>{employee.name.last}</td>\r\n                        <td>{employee.login.username}</td>\r\n                    </tr>\r\n                       ))}\r\n                  \r\n                </tbody>\r\n                </BootstrapTable>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","\r\n\r\nexport default function Search(props) {\r\n    return (\r\n        <div>\r\n            <form>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"search\">Search:</label>\r\n                <input\r\n                onChange={props.handleInputChange}\r\n                value={props.search}\r\n                name=\"search\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Search for Employee by Last Name\"\r\n                id=\"search\"\r\n                />\r\n            </div>\r\n    </form>\r\n        </div>\r\n    )\r\n}\r\n","\nimport './App.css';\nimport {API} from '../src/utils/API'\nimport React from 'react'\nimport BootstrapTable from './components/BootstrapTable'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Search from '../src/components/Search'\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      employees: [],\n      search: \"\"\n    };\n  }\n    componentDidMount(){\n      API.getEmployee()\n      .then(res => {\n        this.setState({ \n          employees: res.data.results\n        })\n      })\n    }\n\n\n    handleInputChange = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n\n\nrender(){\n  return (\n    <div className=\"App\">\n{/* \n      <NavBar  />\n      <Header /> */}\n      <Search search = {this.state.search} handleInputChange={this.handleInputChange} />\n      <BootstrapTable employees = {this.state.employees.filter(employee => employee.name.last.toLowerCase().includes (this.state.search.toLowerCase()))}  />\n\n \n\n    </div>\n  );\n}}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}